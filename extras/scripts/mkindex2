#!/usr/bin/env perl
# mkindex2 - Makes a portable net-snmp persistent index cache of MIBS

use strict;
use warnings;

use charnames ':full';
binmode STDOUT, ':utf8';

use Time::HiRes 'sleep';
use Term::ANSIColor qw(:constants);
use File::Find;
use File::Spec::Functions qw(splitdir catfile);

if (!defined $ENV{MIBHOME}) {
  print "error: must define \$MIBHOME (where the MIB dirs live)\n";
  exit(1);
}

$ENV{SNMPCONFPATH} = '';
$ENV{SNMP_PERSISTENT_DIR} = "$ENV{MIBHOME}/extras/indexes";
$ENV{MIBS} = 'SNMPv2-MIB';
$ENV{MIBDIRS} = "$ENV{MIBHOME}/net-snmp:$ENV{MIBHOME}/rfc:$ENV{MIBHOME}/cisco";

# first setup
mkdir "$ENV{SNMP_PERSISTENT_DIR}/mib_indexes";
mkdir "$ENV{SNMP_PERSISTENT_DIR}/cache";

# clean out any live indexes
find(sub{ -d or unlink or die $! },
  "$ENV{SNMP_PERSISTENT_DIR}/mib_indexes");

# bootstrap initial three indexes
&status('net-snmp:rfc:cisco');
system(q(snmptranslate -IR sysName | egrep -v '^SNMPv2-MIB::sysName$'));

# now for all the other dirs
foreach (map {(splitdir($_))[-1]} grep {-d} glob(catfile($ENV{MIBHOME},'*'))) {
  next if m/^(?:net-snmp|rfc|cisco|extras)$/ or m/\./;
  &status($_);
  my $newmibdirs = $ENV{MIBDIRS} .":$ENV{MIBHOME}/$_";
  system(qq(\\snmptranslate -M'$newmibdirs' -IR sysName | egrep -v '^SNMPv2-MIB::sysName\$'));
}

# sort each index and change developer's MIBHOME to be {{mibhome}}
&status('Building cache...');
find(sub{
  return if -d;
  my $DEST = "$ENV{SNMP_PERSISTENT_DIR}/cache/$_";

  # store platform name from the index
  my $platform = undef;
  open my $index, '<', $_ or die $!;
  while (my $line = <$index>) {
    $platform = $1 if ($line =~ m/$ENV{MIBHOME}.(.+)$/);
    last if $platform;
  }
  close $index;
  die "no platform: $File::Find::name" if !defined $platform;

  # init portable index in the cache dir
  open my $newindex, '>', $DEST or die $!;
  print $newindex "DIR {{mibhome}}/$platform\n";
  close $newindex;

  # copy over sorted content of the index
  system(qq(egrep -v '^DIR' $_ | sort -dfs >> '$DEST')) and die ($? >> 8);
}, "$ENV{SNMP_PERSISTENT_DIR}/mib_indexes");

&status("Indexes updated.\n");
exit(0);

my $i = undef;
sub status {
  my $note = (shift || '');
  my %spinner = (
    "\N{BRAILLE PATTERN DOTS-2345678}" => "\N{BRAILLE PATTERN DOTS-1235678}",
    "\N{BRAILLE PATTERN DOTS-1235678}" => "\N{BRAILLE PATTERN DOTS-1234678}",
    "\N{BRAILLE PATTERN DOTS-1234678}" => "\N{BRAILLE PATTERN DOTS-1234578}",
    "\N{BRAILLE PATTERN DOTS-1234578}" => "\N{BRAILLE PATTERN DOTS-1234567}",
    "\N{BRAILLE PATTERN DOTS-1234567}" => "\N{BRAILLE PATTERN DOTS-1234568}",
    "\N{BRAILLE PATTERN DOTS-1234568}" => "\N{BRAILLE PATTERN DOTS-1245678}",
    "\N{BRAILLE PATTERN DOTS-1245678}" => "\N{BRAILLE PATTERN DOTS-1345678}",
    "\N{BRAILLE PATTERN DOTS-1345678}" => "\N{BRAILLE PATTERN DOTS-2345678}"
  );
  $i = (!defined $i) ? "\N{BRAILLE PATTERN DOTS-2345678}" : $spinner{$i};
  print "\r\e[K"; # blank line
  print YELLOW, "$i ", CYAN, $note, RESET;
  sleep 0.05;
}
