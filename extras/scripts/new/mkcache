#!/usr/bin/env perl
# mkcache - Makes a portable net-snmp persistent index cache of MIBS

use strict;
use warnings;

use charnames ':full';
binmode STDOUT, ':utf8';

use File::Find;
use File::Temp;
use File::Copy;
use File::Spec::Functions 'splitdir';
use Term::ANSIColor qw(:constants);

if (!defined $ENV{MIBHOME}) {
  print "error: must define \$MIBHOME (where the MIB dirs live)\n";
  exit(1);
}

$ENV{SNMPCONFPATH} = '';
$ENV{SNMP_PERSISTENT_DIR} = "$ENV{MIBHOME}/extras/indexes";
$ENV{MIBS} = 'SNMPv2-MIB';
$ENV{MIBDIRS} = "$ENV{MIBHOME}/net-snmp:$ENV{MIBHOME}/rfc:$ENV{MIBHOME}/cisco";

# first setup
mkdir "$ENV{SNMP_PERSISTENT_DIR}/mib_indexes";
mkdir "$ENV{SNMP_PERSISTENT_DIR}/cache";

# clean out any live indexes
find(sub{ -d or unlink or die $! },
  "$ENV{SNMP_PERSISTENT_DIR}/cache");
find(sub{ -d or unlink or die $! },
  "$ENV{SNMP_PERSISTENT_DIR}/mib_indexes");

# bootstrap initial three indexes
&status('net-snmp:rfc:cisco');
system(q(snmptranslate -IR sysName | egrep -v '^SNMPv2-MIB::sysName$'));

# now for all the other dirs
my $next = 3;
foreach (sort map {(splitdir($_))[-1]} grep {-d} glob("$ENV{MIBHOME}/*")) {
  next if m/^(?:net-snmp|rfc|cisco|extras)$/ or m/\./;
  &status($_);

  my $tmpdir = File::Temp->newdir();
  my $newmibdirs = $ENV{MIBDIRS} .":$ENV{MIBHOME}/$_";

  $ENV{SNMP_PERSISTENT_DIR} = $tmpdir->dirname;
  qx(snmptranslate -IR sysName 2>&1 >/dev/null);
  system(qq(\\snmptranslate -M'$newmibdirs' -IR sysName | egrep -v '^SNMPv2-MIB::sysName\$'));
  $ENV{SNMP_PERSISTENT_DIR} = "$ENV{MIBHOME}/extras/indexes";

  copy("$tmpdir/mib_indexes/3", "$ENV{SNMP_PERSISTENT_DIR}/mib_indexes/$next");
  ++$next;
}

# sort each index and change developer's MIBHOME to be {{mibhome}}
&status('Building cache...');
find(sub{
  return if -d;

  # retrieve vendor name from the index
  my $vendor = undef;
  open(my $index, '<', $_) or die $!;
  while (my $line = <$index>) {
    $vendor = $1 if ($line =~ m/$ENV{MIBHOME}.(.+)$/);
    last if $vendor;
  }
  close $index;
  die "no vendor: $File::Find::name" if !defined $vendor;

  # copy over sorted content of the index
  my $dest = "$ENV{SNMP_PERSISTENT_DIR}/cache/$vendor";
  system(qq(egrep -v '^DIR ' $_ | sort -dfs > '$dest')) and die ($? >> 8);

}, "$ENV{SNMP_PERSISTENT_DIR}/mib_indexes");

print "\r\e[K"; # blank line
print "\N{HEAVY CHECK MARK} Cached indexes updated.\n";
exit(0);

my $i = undef;
sub status {
  my $note = (shift || '');
  my %spinner = (
    "\N{BRAILLE PATTERN DOTS-2345678}" => "\N{BRAILLE PATTERN DOTS-1235678}",
    "\N{BRAILLE PATTERN DOTS-1235678}" => "\N{BRAILLE PATTERN DOTS-1234678}",
    "\N{BRAILLE PATTERN DOTS-1234678}" => "\N{BRAILLE PATTERN DOTS-1234578}",
    "\N{BRAILLE PATTERN DOTS-1234578}" => "\N{BRAILLE PATTERN DOTS-1234567}",
    "\N{BRAILLE PATTERN DOTS-1234567}" => "\N{BRAILLE PATTERN DOTS-1234568}",
    "\N{BRAILLE PATTERN DOTS-1234568}" => "\N{BRAILLE PATTERN DOTS-1245678}",
    "\N{BRAILLE PATTERN DOTS-1245678}" => "\N{BRAILLE PATTERN DOTS-1345678}",
    "\N{BRAILLE PATTERN DOTS-1345678}" => "\N{BRAILLE PATTERN DOTS-2345678}"
  );
  $i = (!defined $i) ? "\N{BRAILLE PATTERN DOTS-2345678}" : $spinner{$i};
  print "\r\e[K"; # blank line
  print YELLOW, "$i ", CYAN, $note, RESET;
}
