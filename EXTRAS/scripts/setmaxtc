#!/usr/bin/env perl
# setmaxtc - build and use net-snmp with 16k MAXTC
# I blame (& owe credit to) jeneric ;-).

use strict;
use warnings;

use charnames ':full';
binmode STDOUT, ':utf8';
$|++;

use File::Temp;
use File::Path ();
use Time::HiRes 'sleep';
use Term::ANSIColor qw(:constants);
use File::Spec::Functions qw(splitdir catfile);
use Text::ParseWords 'shellwords';
use POSIX qw(:sys_wait_h);

use FindBin;
use lib catfile($FindBin::Bin, 'lib');
use Helpers;

my $home = "$ENV{MIBHOME}/EXTRAS/net-snmp.local";
my $localenv = "$home/bin/localenv";
my $cpanm = 'cpanm --quiet --notest';
my $success = "$home/.success";
my %envbak = (); #Â backup %ENV

if (not -e $success) {
  File::Path::remove_tree($home);
  mkdir $home;

  _build(
    qq{ curl -sL https://cpanmin.us/ | perl - --quiet --notest --local-lib $home }
    .q{ App::cpanminus App::local::lib::helper PkgConfig Test::CChecker }
    .q{ git@github.com:ollyg/Alien-zlib-Static.git }, 'net-snmp dependencies(1)') or exit 1;

  foreach my $key (shellwords( qx/$localenv zlib-env-perl KEYS/)) {
    $envbak{$key} ||= $ENV{$key};
    $ENV{$key} = qx/$localenv zlib-env-perl $key/;
  }

  _build(qq{ $localenv $cpanm git\@github.com:ollyg/Alien-OpenSSL-Static.git },
    'net-snmp dependencies(2)') or exit 1;

  foreach my $key (shellwords( qx/$localenv openssl-env-perl KEYS/)) {
    $envbak{$key} ||= $ENV{$key};
    $ENV{$key} = qx/$localenv openssl-env-perl $key/;
  }

  _build(qq{ $localenv $cpanm --installdeps git\@github.com:ollyg/Alien-SNMP-MAXTC.git },
    'net-snmp dependencies(3)') or exit 1;

  foreach my $key (shellwords( qx/$localenv zlib-env-perl KEYS/ ),
                     shellwords ( qx/$localenv openssl-env-perl KEYS/ )) {
    delete $ENV{$key};
  }
  $ENV{$_} = $envbak{$_} for (grep {$envbak{$_}} keys %envbak);

  _build(qq{ $localenv $cpanm git\@github.com:ollyg/Alien-SNMP-MAXTC.git },
    'net-snmp') or exit 1;

  open(my $ok, '>', $success) or die $!;  close $ok;
}

print "\N{HEAVY CHECK MARK} Entering localenv...\n";
my $bindir = qx($localenv perl -MAlien::SNMP::MAXTC -e 'print Alien::SNMP::MAXTC->bin_dir');
exec(qq{$localenv $ENV{SHELL} -c 'export PATH="$bindir:\$PATH";\$SHELL'});

sub _build {
  my $target = shift || return;
  my $alias  = shift || return;
  my $err = File::Temp->new();

  defined(my $pid = fork) or die "Couldn't fork: $!";
  if (!$pid) { # Child
    exec(${target}. qq{ 2>$err >/dev/null })
      or die "Couldn't exec: $!";
  } else { # Parent
    while (! waitpid($pid, WNOHANG)) {
      status("Building $alias...");
      sleep 0.05;
    }
  }

  blank();
  if (-s $err) {
    print RED, "\N{HEAVY BALLOT X} ", CYAN,
      "Errors from $alias build:\n", RESET;
    while (<$err>) { print }
    print "\n";
    return 0;
  }

  return 1;
}
